#include <iostream>

using namespace std;

typedef string Texto;
typedef int Dado;

class noh () { 
	friend class lista;
	private:
		noh *proximo;
		noh *anterior;
		Dado numeroMatricula;
		Texto nomeAluno;
		
	public:
		noh (Dado x, Texto y);
		
};

noh::noh(Dado x, Texto y) : numeroMatricula(x):nomeAluno(y) {
	proximo = NULL;
	anterior = NULL;
}

class lista() { 
	
	private:
		noh *primeiro;
		noh *ultimo;
		unsigned tamanho;
	
	public:
		lista();
		void insereComeco(Dado numeroMatricula, Texto nomeAluno);
		void lista::buscaPosicao (Dado valor);
		unsigned lista::buscaPosicao (Dado valor);
		void lista::remover (Dado posicao);
		void lista::imprime ();
		void lista::imprimeInverso ();
};

lista :: lista(){
	primeiro = NULL;
	ultimo = NULL;
	tamanho = 0;
}

void lista::insereComeco (Dado numeroMatricula, Texto nomeAluno){
	
	noh *novo = new noh (numeroMatricula,nomeAluno);
	novo->proximo = primeiro;
	primeiro = novo;
	if ( tamanho == 0 ) 
		ultimo = novo;
	
	tamanho++;

}
Dado lista::buscaPosicao (Dado valor){

	noh *aux = primeiro;
	int contador=0;
	while (aux->numeroMatricula != valor){
		aux = aux->proximo;
		contador++;
	}
	return contador;
}

void lista::remover (Dado posicao) { 	
	
	noh *remover;
	if (posicao == 0) {
		noh *aux = primeiro;
		remover = aux;
		primeiro = aux->proximo;
		aux->proximo->anterior = NULL;
		delete remover;
	}
	else if (posicao == tamanho-1 && tamanho!=0){
		noh *aux = ultimo;
		remover = aux;
		ultimo = aux->anterior;
		aux->anterior->proximo = NULL;
		delete remover;
	}else{
		unsigned posicao = buscaPosicao(posicao);
		for (int i = 0; i < posicao ; i++){
		aux = aux->proximo;
		}
		remover = aux->proximo;
		aux = remover->proximo;
		remover->proximo->anterior = anterior;
	 }
}

void lista::imprime () { 
	
	noh *aux = primeiro;
	while ( aux != NULL ) { 
		cout << aux->nomeAluno << " " << aux->numeroMatricula;
		aux = aux->proximo;
		cout << endl;
	}
}

void lista::imprimeInverso () { 
	
		noh *aux = ultimo;
		while ( aux != NULL ) { 
		cout << aux->nomeAluno << " " << aux->numeroMatricula;
		aux = aux->anterior;
		cout << endl;
	}
}

int main () { 
	
	lista minhaLista;
	int x;
	string y;
	string opcao;
	cin >> opcao;
	while ( opcao != 'T' ) {
	switch (opcao) {
		case 'I':
                cin >> x,y;
                minhaLista.insere(x,y);
                break;
            case 'R':
                cin >> x;
                minhaLista.remove(x);
                break;
            case "ED":
                minhaLista.imprime();
                break;
            case "ER":
                minhaLista.imprimeInverso();
                break;
        }
        cin >> opcao;
    }
    
    return 0;
}

	
		
	
